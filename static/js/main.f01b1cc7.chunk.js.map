{"version":3,"sources":["file.svg","Components/Slider.js","Components/Paragraph.js","Components/generate.js","App.js","Components/strip.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PrettoSlider","withStyles","root","color","height","thumb","width","backgroundColor","border","marginTop","marginLeft","&:focus,&:hover,&$active","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","CustomSlider","_ref","set","para","max","react_default","a","createElement","valueLabelDisplay","aria-label","value","min","onChange","e","v","Paragraph","text","dangerouslySetInnerHTML","__html","words","split","gen","numParagraphs","numSentences","phrases","i","paragraph","j","sentence","numWords","Math","floor","random","k","wordNum","length","App","_useState","useState","_useState2","Object","slicedToArray","setPara","_useState3","_useState4","setSentence","_useState5","_useState6","setText","_useState7","_useState8","copied","setCopied","run","localStorage","getItem","setItem","useEffect","className","href","target","rel","class","viewBox","aria-hidden","d","fill","Box","Card","CardContent","Tooltip","title","Fab","size","onClick","navigator","clipboard","writeText","html","tmp","document","implementation","createHTMLDocument","body","innerHTML","textContent","innerText","strip","then","catch","err","console","log","src","copyIcon","alt","es","steps","content","continuous","scrollToFirstStep","showProgress","showSkipButton","styles","options","zIndex","Snackbar","message","concat","open","autoHideDuration","onClose","Container","maxWidth","Typography","variant","align","component","Date","getFullYear","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","src_App","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f01b1cc7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/file.66276433.svg\";","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n  \r\n\r\nconst PrettoSlider = withStyles({\r\n    root: {\r\n      color: '#52a',\r\n      height: 8,\r\n    },\r\n    thumb: {\r\n      height: 24,\r\n      width: 24,\r\n      backgroundColor: '#fff',\r\n      border: '2px solid currentColor',\r\n      marginTop: -8,\r\n      marginLeft: -12,\r\n      '&:focus,&:hover,&$active': {\r\n        boxShadow: 'inherit',\r\n      },\r\n    },\r\n    active:{},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n    rail: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n  })(Slider);\r\n  \r\n  export default function CustomSlider({set, para, max}){    \r\n    return (\r\n        <PrettoSlider\r\n         valueLabelDisplay=\"auto\"\r\n         aria-label=\"pretto slider\"\r\n         value={para}\r\n         max={max}\r\n         min={1}\r\n         onChange={(e, v)=>set(v)}/>\r\n    )\r\n    \r\n  }","import React from 'react';\r\n\r\n\r\nexport default function Paragraph({text}){    \r\n    return (\r\n        <div dangerouslySetInnerHTML={{__html: text}} />\r\n    );\r\n    \r\n}","const shuffled = \"চলিত ভাষার সামগ্রিক উপস্থাপনই ঘটে মান কথ্য বাংলা ভাষা (ভাগীরথী) জনপদের রীতিকে আশ্রয় করে। যেহেতু চলিত গদ্যরীতি কথ্য ভাষার অনুসারী, সেহেতু রীতিতে ক্রিয়াপদ সর্বনামের রূপগুলি মৌখিক রূপের কাছাকাছি; আর বিশেষ করে ক্রিয়াপদের আকৃতি হয় সংকুচিত। চলিত ভাষা সর্বদাই নতুন নতুন ধ্বনিপরিবর্তনের নিয়মকে মেনে চলে; ফলে সাধু ভাষার চেয়ে চলিত ভাষায় শব্দের রূপান্তর অধিক পরিলক্ষিত হয়। চলিত ভাষার ওপর স্বরসঙ্গতি অভিশ্রুতির প্রভাব বিশেষভাবে লক্ষণীয়। সাধু ভাষা সাধারণত গুরুগম্ভীর প্রকৃতির, কিন্তু চলিত ভাষা অপেক্ষাকৃত লঘু আবার চলিত ভাষার একটা সাবলীল স্বচ্ছন্দ গতি আছে সাধু ভাষায় সুলভ নয়। দৈনন্দিন ব্যবহারিক ক্ষেত্র থেকে শুরু করে জীবনের সর্বস্তরে এখন চলিত ভাষা ব্যবহূত হচ্ছে। চলিত ভাষা বাংলা লেখ্য গদ্যরীতির দুটি রূপের একটি, অপরটি সাধু ভাষা। উনিশ শতকের তৃতীয় দশকে ভবানীচরণ বন্দ্যোপাধ্যায়ের হাতে রীতির প্রথম ব্যবহার হয়। তারপর প্যারীচাঁদ মিত্র কালীপ্রসন্ন সিংহের রচনায় এর ক্রমবিকাশ ঘটে প্রমথ চৌধুরীর সবুজপত্রকে কেন্দ্র করে ১৯১৪ সালের দিকে গদ্যরীতি সাহিত্যিক স্বীকৃতি পূর্ণ বিকাশ লাভ করে। আধুনিক যুগে চলিত ভাষার ক্রমবর্ধিষ্ণু প্রভাব, প্রসার প্রতিপত্তি ঘটেছে; সাধু ভাষার ব্যবহার কেবল ক্ষেত্রবিশেষে এখনও টিকে আছে।\";\r\nconst words = shuffled.split(' ');\r\n\r\nexport const gen = (numParagraphs,numSentences, phrases )=>{\r\n    var text = \"\";\r\n\r\n      if(numParagraphs < 1){\r\n        return text;\r\n      }\r\n\r\n     // build each paragraph based on user input\r\n      for(var i = 0; i < numParagraphs; i++){        \r\n        var paragraph = \"\";\r\n        // build each sentence based on user input\r\n        for(var j = 0; j < numSentences; j++){\r\n          // sentence placeholder\r\n          var sentence = \"\";\r\n          // 10 - 15 words per sentence, randomly, then loop that many times, grabbing random word\r\n          var numWords = Math.floor((Math.random()*6)+10);\r\n          for(var k = 0; k < numWords; k++){\r\n            var word = \"\";\r\n            // get random index for words array\r\n            var wordNum = Math.floor(Math.random()*words.length);            \r\n            word = words[wordNum];\r\n\r\n            // if its not the first word, put a space in front of it\r\n            if (k !== 0){\r\n              sentence += \" \";\r\n            }\r\n            // add word to sentence placeholder and run word choosing loop again\r\n            sentence += word;\r\n          }\r\n          // when word loop complete, punctuate sentence\r\n          sentence += \"।\";\r\n          // capitalized first letter of the sentence\r\n         //  sentence = sentence.charAt(0).toUpperCase() + sentence.slice(1);;\r\n\r\n          // add the sentence and space after to the paragraph\r\n          paragraph += sentence;\r\n          paragraph += \" \";\r\n        }\r\n        // when sentence loop complete, added p tags for formatting and insert into text placeholder\r\n        paragraph = \"<p>\" + paragraph + \"</p>\\n\";\r\n        text += paragraph;\r\n      }\r\n      return text;\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { Card, Box, CardContent, Fab, Tooltip, Snackbar, Typography, Container} from '@material-ui/core';\r\nimport copyIcon from './file.svg';\r\nimport './App.css';\r\nimport Slider  from './Components/Slider';\r\nimport Paragraph  from './Components/Paragraph';\r\nimport {gen} from './Components/generate.js';\r\nimport strip from './Components/strip.js';\r\nimport Joyride from 'react-joyride';\r\n\r\nfunction App() {\r\n  const [para, setPara] = useState(2);\r\n  const [sentence, setSentence] = useState(3);  \r\n  const [text, setText] = useState(gen(para, sentence));  \r\n  const [copied, setCopied] = useState(false);\r\n  // const [run, setRun] = useState(true);\r\n  let run = true;\r\n  let landed = localStorage.getItem('landed');\r\n  if(!landed){\r\n    localStorage.setItem('landed', true);\r\n  } else {\r\n    run = false\r\n  }\r\n\r\n  const steps = [\r\n    {\r\n      target: 'body',\r\n      content:'বাংলা টেক্সট জেনারেটর এ আপনাকে স্বাগতম!'\r\n    },\r\n    {\r\n      target: '.Paragraph',\r\n      content:'Set the number of Paragraph you want.'\r\n    },\r\n    {\r\n      target: '.Sentence',\r\n      content:'Set the number of Sentence in Paragraph you want.'\r\n    },\r\n    {\r\n      target:'.pbox',\r\n      content:'Here you will get the Texts.'\r\n    },\r\n    {\r\n      target:'.copy',\r\n      content: 'Click here to copy the text.'\r\n    }\r\n  ];\r\n  \r\n  useEffect(()=>\r\n    {setText(gen(para, sentence))},[para, sentence]\r\n  )\r\n\r\n  function copy_to_clipboard(){ \r\n    navigator\r\n      .clipboard\r\n      .writeText(strip(text))\r\n      .then(()=>setCopied(true))\r\n      .catch((err)=>console.log(err));\r\n    }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <a href=\"https://github.com/sahapranta\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"github-corner\" aria-label=\"View source on GitHub\"><svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" aria-hidden=\"true\"><path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path><path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" class=\"octo-arm\"></path><path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"></path></svg></a>\r\n      \r\n        <Box className=\"hero\"> \r\n          <h1>Bangla Text Generator</h1>\r\n          <p>বাংলায় ইউনিকোড ডামি টেক্সট জেনারেটর</p>\r\n        </Box>\r\n        <div className=\"controls\">\r\n          <Card>          \r\n            <CardContent>                          \r\n                <div className=\"heading\">                                 \r\n                \r\n                <div className=\"slider-box\">\r\n                  <div className=\"slide Paragraph\">\r\n                    <small>Number of Paragraph {para}</small>\r\n                    <Slider set={setPara} para={para} max={10}/>\r\n                  </div>\r\n                  <div className=\"slide Sentence\">\r\n                    <small> Number of Sentence {sentence}</small>\r\n                    <Slider set={setSentence} para={sentence} max={5}/> \r\n                  </div>\r\n                </div>\r\n\r\n                <Tooltip title=\"Copy Text\" aria-label=\"copy\">\r\n                    <Fab className=\"copy\" size=\"small\" onClick={copy_to_clipboard}>\r\n                      <img src={copyIcon} width=\"25\" alt=\"copy\"/>\r\n                    </Fab>\r\n                  </Tooltip>\r\n\r\n                </div>\r\n                <Joyride\r\n                    steps={steps}\r\n                    continuous={true}\r\n                    run={run}\r\n                    scrollToFirstStep={true}\r\n                    showProgress={true}\r\n                    showSkipButton={true}         \r\n                    styles={{\r\n                      options: {\r\n                        zIndex: 999999990,\r\n                      },\r\n                    }}\r\n                  />\r\n                <div className=\"pbox\">\r\n                  <Paragraph text={text}/>\r\n                  <Snackbar\r\n                    message={`Text of ${para} Paragraph Copied`}\r\n                    open={copied}\r\n                    autoHideDuration={3000}\r\n                    onClose={()=>setCopied(false)}/>\r\n                </div>\r\n                <small>* Texts are used from BanglaPedia</small>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <footer className=\"footer\">\r\n            <Container maxWidth=\"lg\">\r\n              <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n                Copyright Pranta Saha &copy; {new Date().getFullYear()}\r\n              </Typography>          \r\n            </Container>\r\n          </footer>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default function strip(html)\r\n{\r\n   var tmp = document.implementation.createHTMLDocument(\"New\").body;\r\n   tmp.innerHTML = html;\r\n   return tmp.textContent || tmp.innerText || \"\";\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}